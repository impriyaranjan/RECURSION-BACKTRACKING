import java.util.HashMap;
public class CryptAirthmetic
{
  public static void main(String[] args){
      String s1="SEND";
      String s2="MORE";
      String s3="MONEY";
      HashMap<Character,Integer> charIntMap =new HashMap<>();
      String unique="";
      for(int i=0;i<s1.length();i++)
      { if(!charIntMap.containsKey(s1.charAt(i)))
        { charIntMap.put(s1.charAt(i),-1);
          unique +=s1.charAt(i);
        }
      }
       for(int i=0;i<s2.length();i++)
      { if(!charIntMap.containsKey(s2.charAt(i)))
        { charIntMap.put(s2.charAt(i),-1);
          unique +=s2.charAt(i);
        }
      }
       for(int i=0;i<s3.length();i++)
      { if(!charIntMap.containsKey(s3.charAt(i)))
        { charIntMap.put(s3.charAt(i),-1);
          unique += s3.charAt(i);
        }
      }
      boolean[] usedNumbers=new boolean[10];  //store [0-->9]
      cryptAirthmetic(unique,0,charIntMap,usedNumbers,s1,s2,s3);
  
    }
 
  static void cryptAirthmetic(String unique,int unqindex,HashMap<Character,Integer> charIntMap,boolean[] usedNumbers,String s1,String s2,String s3){
      
    if(unqindex==unique.length())
    { int num1=getNum(s1,charIntMap);
      int num2=getNum(s2,charIntMap);
      int num3=getNum(s3,charIntMap);
      
      if(num1+num2==num3)       //print in Alphabetical order(Base Case)
      { for(int i=0;i<unique.length();i++)
            System.out.print("("+unique.charAt(i)+"->"+charIntMap.get(unique.charAt(i))+"),");
      /*  for(int i=0;i<26;i++)
        { char ch=(char)('a'+i);
          if(charIntMap.containsKey(ch))
            {    System.out.print("("+ch+"->"+charIntMap.get(ch)+"),");}
        }*/
        System.out.println();
      }
      return;
    }
    char ch=unique.charAt(unqindex);
    for(int num=0;num<=9;num++)
    { if(usedNumbers[num]==false)
      { charIntMap.put(ch,num);
        usedNumbers[num]=true;
        cryptAirthmetic(unique,unqindex+1,charIntMap,usedNumbers,s1,s2,s3);
        usedNumbers[num]=false;
        charIntMap.put(ch,-1);
      }
    }
  }
  static int getNum(String s,HashMap<Character,Integer> charIntMap){
    String num="";
    for(int i=0;i<s.length();i++)
        num+=charIntMap.get(s.charAt(i));
    return Integer.parseInt(num);           //2nd opt: String.valueOf(num);
  }  
    
}
